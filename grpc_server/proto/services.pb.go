// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.11.3
// source: services.proto

package proto

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type RollerCoaster struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name         string `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	Manufacturer string `protobuf:"bytes,2,opt,name=Manufacturer,proto3" json:"Manufacturer,omitempty"`
	CoasterID    string `protobuf:"bytes,3,opt,name=CoasterID,proto3" json:"CoasterID,omitempty"`
	InPark       string `protobuf:"bytes,4,opt,name=InPark,proto3" json:"InPark,omitempty"`
	Height       int32  `protobuf:"varint,5,opt,name=Height,proto3" json:"Height,omitempty"`
}

func (x *RollerCoaster) Reset() {
	*x = RollerCoaster{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RollerCoaster) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RollerCoaster) ProtoMessage() {}

func (x *RollerCoaster) ProtoReflect() protoreflect.Message {
	mi := &file_services_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RollerCoaster.ProtoReflect.Descriptor instead.
func (*RollerCoaster) Descriptor() ([]byte, []int) {
	return file_services_proto_rawDescGZIP(), []int{0}
}

func (x *RollerCoaster) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RollerCoaster) GetManufacturer() string {
	if x != nil {
		return x.Manufacturer
	}
	return ""
}

func (x *RollerCoaster) GetCoasterID() string {
	if x != nil {
		return x.CoasterID
	}
	return ""
}

func (x *RollerCoaster) GetInPark() string {
	if x != nil {
		return x.InPark
	}
	return ""
}

func (x *RollerCoaster) GetHeight() int32 {
	if x != nil {
		return x.Height
	}
	return 0
}

type GetCoastersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Empty string `protobuf:"bytes,1,opt,name=Empty,proto3" json:"Empty,omitempty"`
}

func (x *GetCoastersRequest) Reset() {
	*x = GetCoastersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCoastersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCoastersRequest) ProtoMessage() {}

func (x *GetCoastersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCoastersRequest.ProtoReflect.Descriptor instead.
func (*GetCoastersRequest) Descriptor() ([]byte, []int) {
	return file_services_proto_rawDescGZIP(), []int{1}
}

func (x *GetCoastersRequest) GetEmpty() string {
	if x != nil {
		return x.Empty
	}
	return ""
}

type GetCoastersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Coasters []*RollerCoaster `protobuf:"bytes,1,rep,name=Coasters,proto3" json:"Coasters,omitempty"`
}

func (x *GetCoastersResponse) Reset() {
	*x = GetCoastersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCoastersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCoastersResponse) ProtoMessage() {}

func (x *GetCoastersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCoastersResponse.ProtoReflect.Descriptor instead.
func (*GetCoastersResponse) Descriptor() ([]byte, []int) {
	return file_services_proto_rawDescGZIP(), []int{2}
}

func (x *GetCoastersResponse) GetCoasters() []*RollerCoaster {
	if x != nil {
		return x.Coasters
	}
	return nil
}

type GetCoasterRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CoasterID string `protobuf:"bytes,1,opt,name=CoasterID,proto3" json:"CoasterID,omitempty"`
}

func (x *GetCoasterRequest) Reset() {
	*x = GetCoasterRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCoasterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCoasterRequest) ProtoMessage() {}

func (x *GetCoasterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCoasterRequest.ProtoReflect.Descriptor instead.
func (*GetCoasterRequest) Descriptor() ([]byte, []int) {
	return file_services_proto_rawDescGZIP(), []int{3}
}

func (x *GetCoasterRequest) GetCoasterID() string {
	if x != nil {
		return x.CoasterID
	}
	return ""
}

type GetCoasterResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Coaster *RollerCoaster `protobuf:"bytes,1,opt,name=Coaster,proto3" json:"Coaster,omitempty"`
}

func (x *GetCoasterResponse) Reset() {
	*x = GetCoasterResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCoasterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCoasterResponse) ProtoMessage() {}

func (x *GetCoasterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCoasterResponse.ProtoReflect.Descriptor instead.
func (*GetCoasterResponse) Descriptor() ([]byte, []int) {
	return file_services_proto_rawDescGZIP(), []int{4}
}

func (x *GetCoasterResponse) GetCoaster() *RollerCoaster {
	if x != nil {
		return x.Coaster
	}
	return nil
}

type AddNewCoasterRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Coaster *RollerCoaster `protobuf:"bytes,1,opt,name=Coaster,proto3" json:"Coaster,omitempty"`
}

func (x *AddNewCoasterRequest) Reset() {
	*x = AddNewCoasterRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddNewCoasterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddNewCoasterRequest) ProtoMessage() {}

func (x *AddNewCoasterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddNewCoasterRequest.ProtoReflect.Descriptor instead.
func (*AddNewCoasterRequest) Descriptor() ([]byte, []int) {
	return file_services_proto_rawDescGZIP(), []int{5}
}

func (x *AddNewCoasterRequest) GetCoaster() *RollerCoaster {
	if x != nil {
		return x.Coaster
	}
	return nil
}

type AddNewCoasterResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result  string `protobuf:"bytes,1,opt,name=Result,proto3" json:"Result,omitempty"`
	Success bool   `protobuf:"varint,2,opt,name=Success,proto3" json:"Success,omitempty"`
}

func (x *AddNewCoasterResponse) Reset() {
	*x = AddNewCoasterResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddNewCoasterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddNewCoasterResponse) ProtoMessage() {}

func (x *AddNewCoasterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddNewCoasterResponse.ProtoReflect.Descriptor instead.
func (*AddNewCoasterResponse) Descriptor() ([]byte, []int) {
	return file_services_proto_rawDescGZIP(), []int{6}
}

func (x *AddNewCoasterResponse) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

func (x *AddNewCoasterResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

var File_services_proto protoreflect.FileDescriptor

var file_services_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x95, 0x01, 0x0a, 0x0d, 0x52, 0x6f, 0x6c, 0x6c,
	0x65, 0x72, 0x43, 0x6f, 0x61, 0x73, 0x74, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a,
	0x0c, 0x4d, 0x61, 0x6e, 0x75, 0x66, 0x61, 0x63, 0x74, 0x75, 0x72, 0x65, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x4d, 0x61, 0x6e, 0x75, 0x66, 0x61, 0x63, 0x74, 0x75, 0x72, 0x65,
	0x72, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x6f, 0x61, 0x73, 0x74, 0x65, 0x72, 0x49, 0x44, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x43, 0x6f, 0x61, 0x73, 0x74, 0x65, 0x72, 0x49, 0x44, 0x12,
	0x16, 0x0a, 0x06, 0x49, 0x6e, 0x50, 0x61, 0x72, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x49, 0x6e, 0x50, 0x61, 0x72, 0x6b, 0x12, 0x16, 0x0a, 0x06, 0x48, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x22,
	0x2a, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x61, 0x73, 0x74, 0x65, 0x72, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x47, 0x0a, 0x13, 0x47,
	0x65, 0x74, 0x43, 0x6f, 0x61, 0x73, 0x74, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x30, 0x0a, 0x08, 0x43, 0x6f, 0x61, 0x73, 0x74, 0x65, 0x72, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x6f, 0x6c,
	0x6c, 0x65, 0x72, 0x43, 0x6f, 0x61, 0x73, 0x74, 0x65, 0x72, 0x52, 0x08, 0x43, 0x6f, 0x61, 0x73,
	0x74, 0x65, 0x72, 0x73, 0x22, 0x31, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x61, 0x73, 0x74,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x6f, 0x61,
	0x73, 0x74, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x43, 0x6f,
	0x61, 0x73, 0x74, 0x65, 0x72, 0x49, 0x44, 0x22, 0x44, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x43, 0x6f,
	0x61, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a,
	0x07, 0x43, 0x6f, 0x61, 0x73, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x43, 0x6f, 0x61,
	0x73, 0x74, 0x65, 0x72, 0x52, 0x07, 0x43, 0x6f, 0x61, 0x73, 0x74, 0x65, 0x72, 0x22, 0x46, 0x0a,
	0x14, 0x41, 0x64, 0x64, 0x4e, 0x65, 0x77, 0x43, 0x6f, 0x61, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x07, 0x43, 0x6f, 0x61, 0x73, 0x74, 0x65, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52,
	0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x43, 0x6f, 0x61, 0x73, 0x74, 0x65, 0x72, 0x52, 0x07, 0x43, 0x6f,
	0x61, 0x73, 0x74, 0x65, 0x72, 0x22, 0x49, 0x0a, 0x15, 0x41, 0x64, 0x64, 0x4e, 0x65, 0x77, 0x43,
	0x6f, 0x61, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x32, 0xe5, 0x01, 0x0a, 0x0e, 0x43, 0x6f, 0x61, 0x73, 0x74, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x44, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x61, 0x73, 0x74, 0x65,
	0x72, 0x73, 0x12, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f,
	0x61, 0x73, 0x74, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x61, 0x73, 0x74, 0x65, 0x72,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a, 0x0a, 0x47, 0x65, 0x74,
	0x43, 0x6f, 0x61, 0x73, 0x74, 0x65, 0x72, 0x12, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x47, 0x65, 0x74, 0x43, 0x6f, 0x61, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x61,
	0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4a, 0x0a, 0x0d,
	0x41, 0x64, 0x64, 0x4e, 0x65, 0x77, 0x43, 0x6f, 0x61, 0x73, 0x74, 0x65, 0x72, 0x12, 0x1b, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x64, 0x64, 0x4e, 0x65, 0x77, 0x43, 0x6f, 0x61, 0x73,
	0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x41, 0x64, 0x64, 0x4e, 0x65, 0x77, 0x43, 0x6f, 0x61, 0x73, 0x74, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x09, 0x5a, 0x07, 0x2e, 0x3b, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_services_proto_rawDescOnce sync.Once
	file_services_proto_rawDescData = file_services_proto_rawDesc
)

func file_services_proto_rawDescGZIP() []byte {
	file_services_proto_rawDescOnce.Do(func() {
		file_services_proto_rawDescData = protoimpl.X.CompressGZIP(file_services_proto_rawDescData)
	})
	return file_services_proto_rawDescData
}

var file_services_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_services_proto_goTypes = []interface{}{
	(*RollerCoaster)(nil),         // 0: proto.RollerCoaster
	(*GetCoastersRequest)(nil),    // 1: proto.GetCoastersRequest
	(*GetCoastersResponse)(nil),   // 2: proto.GetCoastersResponse
	(*GetCoasterRequest)(nil),     // 3: proto.GetCoasterRequest
	(*GetCoasterResponse)(nil),    // 4: proto.GetCoasterResponse
	(*AddNewCoasterRequest)(nil),  // 5: proto.AddNewCoasterRequest
	(*AddNewCoasterResponse)(nil), // 6: proto.AddNewCoasterResponse
}
var file_services_proto_depIdxs = []int32{
	0, // 0: proto.GetCoastersResponse.Coasters:type_name -> proto.RollerCoaster
	0, // 1: proto.GetCoasterResponse.Coaster:type_name -> proto.RollerCoaster
	0, // 2: proto.AddNewCoasterRequest.Coaster:type_name -> proto.RollerCoaster
	1, // 3: proto.CoasterService.GetCoasters:input_type -> proto.GetCoastersRequest
	3, // 4: proto.CoasterService.GetCoaster:input_type -> proto.GetCoasterRequest
	5, // 5: proto.CoasterService.AddNewCoaster:input_type -> proto.AddNewCoasterRequest
	2, // 6: proto.CoasterService.GetCoasters:output_type -> proto.GetCoastersResponse
	4, // 7: proto.CoasterService.GetCoaster:output_type -> proto.GetCoasterResponse
	6, // 8: proto.CoasterService.AddNewCoaster:output_type -> proto.AddNewCoasterResponse
	6, // [6:9] is the sub-list for method output_type
	3, // [3:6] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_services_proto_init() }
func file_services_proto_init() {
	if File_services_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_services_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RollerCoaster); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCoastersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCoastersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCoasterRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCoasterResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddNewCoasterRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddNewCoasterResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_services_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_services_proto_goTypes,
		DependencyIndexes: file_services_proto_depIdxs,
		MessageInfos:      file_services_proto_msgTypes,
	}.Build()
	File_services_proto = out.File
	file_services_proto_rawDesc = nil
	file_services_proto_goTypes = nil
	file_services_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// CoasterServiceClient is the client API for CoasterService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CoasterServiceClient interface {
	GetCoasters(ctx context.Context, in *GetCoastersRequest, opts ...grpc.CallOption) (*GetCoastersResponse, error)
	GetCoaster(ctx context.Context, in *GetCoasterRequest, opts ...grpc.CallOption) (*GetCoasterResponse, error)
	AddNewCoaster(ctx context.Context, in *AddNewCoasterRequest, opts ...grpc.CallOption) (*AddNewCoasterResponse, error)
}

type coasterServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewCoasterServiceClient(cc grpc.ClientConnInterface) CoasterServiceClient {
	return &coasterServiceClient{cc}
}

func (c *coasterServiceClient) GetCoasters(ctx context.Context, in *GetCoastersRequest, opts ...grpc.CallOption) (*GetCoastersResponse, error) {
	out := new(GetCoastersResponse)
	err := c.cc.Invoke(ctx, "/proto.CoasterService/GetCoasters", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *coasterServiceClient) GetCoaster(ctx context.Context, in *GetCoasterRequest, opts ...grpc.CallOption) (*GetCoasterResponse, error) {
	out := new(GetCoasterResponse)
	err := c.cc.Invoke(ctx, "/proto.CoasterService/GetCoaster", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *coasterServiceClient) AddNewCoaster(ctx context.Context, in *AddNewCoasterRequest, opts ...grpc.CallOption) (*AddNewCoasterResponse, error) {
	out := new(AddNewCoasterResponse)
	err := c.cc.Invoke(ctx, "/proto.CoasterService/AddNewCoaster", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CoasterServiceServer is the server API for CoasterService service.
type CoasterServiceServer interface {
	GetCoasters(context.Context, *GetCoastersRequest) (*GetCoastersResponse, error)
	GetCoaster(context.Context, *GetCoasterRequest) (*GetCoasterResponse, error)
	AddNewCoaster(context.Context, *AddNewCoasterRequest) (*AddNewCoasterResponse, error)
}

// UnimplementedCoasterServiceServer can be embedded to have forward compatible implementations.
type UnimplementedCoasterServiceServer struct {
}

func (*UnimplementedCoasterServiceServer) GetCoasters(context.Context, *GetCoastersRequest) (*GetCoastersResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCoasters not implemented")
}
func (*UnimplementedCoasterServiceServer) GetCoaster(context.Context, *GetCoasterRequest) (*GetCoasterResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCoaster not implemented")
}
func (*UnimplementedCoasterServiceServer) AddNewCoaster(context.Context, *AddNewCoasterRequest) (*AddNewCoasterResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddNewCoaster not implemented")
}

func RegisterCoasterServiceServer(s *grpc.Server, srv CoasterServiceServer) {
	s.RegisterService(&_CoasterService_serviceDesc, srv)
}

func _CoasterService_GetCoasters_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetCoastersRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CoasterServiceServer).GetCoasters(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.CoasterService/GetCoasters",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CoasterServiceServer).GetCoasters(ctx, req.(*GetCoastersRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CoasterService_GetCoaster_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetCoasterRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CoasterServiceServer).GetCoaster(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.CoasterService/GetCoaster",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CoasterServiceServer).GetCoaster(ctx, req.(*GetCoasterRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CoasterService_AddNewCoaster_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddNewCoasterRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CoasterServiceServer).AddNewCoaster(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.CoasterService/AddNewCoaster",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CoasterServiceServer).AddNewCoaster(ctx, req.(*AddNewCoasterRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _CoasterService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.CoasterService",
	HandlerType: (*CoasterServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetCoasters",
			Handler:    _CoasterService_GetCoasters_Handler,
		},
		{
			MethodName: "GetCoaster",
			Handler:    _CoasterService_GetCoaster_Handler,
		},
		{
			MethodName: "AddNewCoaster",
			Handler:    _CoasterService_AddNewCoaster_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "services.proto",
}
